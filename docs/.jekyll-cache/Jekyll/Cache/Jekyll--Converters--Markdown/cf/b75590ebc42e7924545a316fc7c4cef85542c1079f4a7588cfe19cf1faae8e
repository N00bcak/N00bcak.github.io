I"!<p>ångstromCTF2021 was, in all honesty, probably the most serious I’ve been on a CTFTime CTF.</p>

<p>The spread of challenge difficulties was just right for a beginner like me. While I could not do any of the harder challenges (includes my nemesis, block ciphers), I was nonetheless able to solve quite a sizable number, including some I did not think possible.</p>

<p>In the end, we reached 71st place in the CTF!</p>

<p><img src="" alt="" /></p>

<h1 id="writeups">Writeups</h1>
<p>I made writeups for the following two challenges: (and one picture to complain about Rev :&lt;)</p>
<ol>
  <li><a href="#substitution">(Crypto) Subsitution</a></li>
  <li><a href="#I'm-So-Random">(Crypto) I’m So Random</a></li>
</ol>

<h2 id="substitution">Substitution</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Aplet's quirky and unique so he made my own [PRNG](https://files.actf.co/a155e414e8cc7e0279ffe40225d7295fda5c2b79116313c2cb8fb8bf22dda70d/chall.py)! It's not like the other PRNGs, its absolutely unbreakable!

nc crypto.2021.chall.actf.co 21600

Author: EvilMuffinHa
</code></pre></div></div>

<h3 id="reconnaissance">Reconnaissance</h3>

<p>We are presented with the following code:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="k">class</span> <span class="nc">Generator</span><span class="p">():</span>
    <span class="n">DIGITS</span> <span class="o">=</span> <span class="mi">8</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">seed</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">seed</span> <span class="o">=</span> <span class="n">seed</span>
        <span class="k">assert</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">seed</span><span class="p">))</span> <span class="o">==</span> <span class="bp">self</span><span class="p">.</span><span class="n">DIGITS</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">getNum</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">seed</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">seed</span><span class="o">**</span><span class="mi">2</span><span class="p">).</span><span class="n">rjust</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">DIGITS</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span> <span class="s">"0"</span><span class="p">)[</span><span class="bp">self</span><span class="p">.</span><span class="n">DIGITS</span><span class="o">//</span><span class="mi">2</span><span class="p">:</span><span class="bp">self</span><span class="p">.</span><span class="n">DIGITS</span> <span class="o">+</span> <span class="bp">self</span><span class="p">.</span><span class="n">DIGITS</span><span class="o">//</span><span class="mi">2</span><span class="p">])</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">seed</span>


<span class="n">r1</span> <span class="o">=</span> <span class="n">Generator</span><span class="p">(</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">10000000</span><span class="p">,</span> <span class="mi">99999999</span><span class="p">))</span>
<span class="n">r2</span> <span class="o">=</span> <span class="n">Generator</span><span class="p">(</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">10000000</span><span class="p">,</span> <span class="mi">99999999</span><span class="p">))</span>


<span class="n">query_counter</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">query</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Would you like to get a random output [r], or guess the next random number [g]? "</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">query</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"r"</span><span class="p">,</span> <span class="s">"g"</span><span class="p">]:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"Invalid input."</span><span class="p">)</span>
        <span class="k">break</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">query</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span> <span class="o">==</span> <span class="s">"r"</span> <span class="ow">and</span> <span class="n">query_counter</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="n">r1</span><span class="p">.</span><span class="n">getNum</span><span class="p">()</span> <span class="o">*</span> <span class="n">r2</span><span class="p">.</span><span class="n">getNum</span><span class="p">())</span>
            <span class="n">query_counter</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">elif</span> <span class="n">query_counter</span> <span class="o">&gt;=</span> <span class="mi">3</span> <span class="ow">and</span> <span class="n">query</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span> <span class="o">==</span> <span class="s">"r"</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">"You don't get more random numbers!"</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">):</span>
                <span class="n">guess</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">"What is your guess to the next value generated? "</span><span class="p">))</span>
                <span class="k">if</span> <span class="n">guess</span> <span class="o">!=</span> <span class="n">r1</span><span class="p">.</span><span class="n">getNum</span><span class="p">()</span> <span class="o">*</span> <span class="n">r2</span><span class="p">.</span><span class="n">getNum</span><span class="p">():</span>
                    <span class="k">print</span><span class="p">(</span><span class="s">"Incorrect!"</span><span class="p">)</span>
                    <span class="nb">exit</span><span class="p">()</span>
            <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">"flag"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
                <span class="n">fleg</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
            <span class="k">print</span><span class="p">(</span><span class="s">"Congrats! Here's your flag: "</span><span class="p">)</span>
            <span class="k">print</span><span class="p">(</span><span class="n">fleg</span><span class="p">)</span>
            <span class="nb">exit</span><span class="p">()</span>
</code></pre></div></div>
:ET